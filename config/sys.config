[

    {lager, [
        {error_logger_hwm, 600},
        {log_root, "/var/log/shortener"},
        {handlers, [
            {lager_console_backend, debug},
            {lager_file_backend, [
                {file, "console.json"},
                {level, debug},
                {formatter, lager_logstash_formatter}
            ]}
        ]},
        {extra_sinks, [
            {shortener_access_lager_event, [
                {handlers, [
                    {lager_file_backend, [
                        {file, "access_log.json"},
                        {level, info},
                        {formatter, lager_logstash_formatter}
                    ]}
                ]},
                {async_threshold, 20},
                {async_threshold_window, 5}
            ]}
        ]}
    ]},

    {scoper, [
        {storage, scoper_storage_lager}
    ]},

    {shortener, [
        {space_size             , 8},
        {hash_algorithm         , sha256},
        {api, #{
            ip                 => "::",
            port               => 8080,
            authorizer         => #{
                keyset         => #{}
            },
            short_url_template => #{
                scheme         => https,
                netloc         => "rbk.mn",
                path           => "/"
            },
            source_url_whitelist => [
                "https://*"
            ]
        }},
        {processor, #{
            ip                 => "::",
            port               => 8022,
            net_opts           => [
                {timeout        , 60000}
            ]
        }},
        {service_clients, #{
            automaton => #{
                url => <<"http://machinegun:8022/v1/automaton">>,
                retries => #{
                    % function => retry strategy
                    % '_' work as "any"
                    % default value is 'finish'
                    % for more info look genlib_retry :: strategy()
                    % https://github.com/rbkmoney/genlib/blob/master/src/genlib_retry.erl#L19
                    'Start'   => {linear, 3, 1000},
                    'GetMachine'   => {linear, 3, 1000},
                    'Remove'   => {linear, 3, 1000},
                    '_'     => finish
                }
            }
        }},
        {health_checkers, [
            {erl_health, disk     , ["/", 99]        },
            {erl_health, cg_memory, [99]             },
            {erl_health, service  , [<<"shortener">>]}
        ]}
    ]}

].
